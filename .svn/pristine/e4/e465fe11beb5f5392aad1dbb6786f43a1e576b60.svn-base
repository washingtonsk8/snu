/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package snu.fronteiras.controladores;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;
import javafx.scene.control.MenuItem;
import javafx.scene.layout.AnchorPane;
import snu.fronteiras.controladores.integrante.TemplatePesquisaIntegranteController;
import snu.fronteiras.controladores.missa.VisualizarDadosMissaController;
import snu.fronteiras.controladores.musica.TemplatePesquisaMusicaController;
import snu.geral.TipoPagina;

/**
 * Classe que controla a tela principal do programa
 *
 * @author Washington Luis
 */
public class FXMLDocumentController implements Initializable {

    @FXML
    private AnchorPane anchorPane;
    @FXML
    private AnchorPane contentAnchorPane;
    @FXML
    private MenuBar menubar;
    @FXML
    private Menu menuIntegrante;
    @FXML
    private MenuItem itemCadastrarIntegrante;
    @FXML
    private MenuItem itemAtualizarIntegrante;
    @FXML
    private MenuItem itemRemoverIntegrante;
    @FXML
    private Menu menuMusica;
    @FXML
    private MenuItem itemSobre;
    @FXML
    private MenuItem itemVisualizarDados;
    @FXML
    private MenuItem itemRemoverMusica;
    @FXML
    private MenuItem itemGerenciarAutores;
    @FXML
    private MenuItem itemAfinador;
    @FXML
    private Menu menuUtilitarios;
    @FXML
    private MenuItem itemCriarMusica;
    @FXML
    private MenuItem itemVisualizarDadosMusica;
    @FXML
    private MenuItem itemAtualizarDadosMusica;
    @FXML
    private MenuItem itemGerarImpressao;
    @FXML
    private Menu menuMissa;
    @FXML
    private MenuItem itemMontarMissa;
    @FXML
    private MenuItem itemPesquisarMissa;
    @FXML
    private Menu menuConfiguracoes;
    @FXML
    private MenuItem itemConfigurarEmail;

    private FXMLLoader templatePesquisaIntegranteLoader;

    private FXMLLoader templatePesquisaMusicaLoader;

    private FXMLLoader templatePesquisaMissaLoader;

    private void iniciarControladorPesquisaIntegrante() {
        this.templatePesquisaIntegranteLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/integrante/TemplatePesquisaIntegrante.fxml"));

        try {
            this.templatePesquisaIntegranteLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void iniciarControladorPesquisaMusica() {
        this.templatePesquisaMusicaLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/musica/TemplatePesquisaMusica.fxml"));

        try {
            this.templatePesquisaMusicaLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void iniciarControladorPesquisaMissa() {
        this.templatePesquisaMissaLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/missa/VisualizarDadosMissa.fxml"));

        try {
            this.templatePesquisaMissaLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initComponents() {
        iniciarControladorPesquisaIntegrante();
        iniciarControladorPesquisaMusica();
        iniciarControladorPesquisaMissa();
    }

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        initComponents();
    }

    @FXML
    private void onActionFromItemCadastrarIntegrante(ActionEvent event) {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/integrante/CadastrarIntegrante.fxml"));
        Parent root = null;
        try {
            root = (Parent) fxmlLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add(root);
    }

    @FXML
    private void onActionFromItemVisualizarDadosIntegrante(ActionEvent event) {
        TemplatePesquisaIntegranteController controlador = this.templatePesquisaIntegranteLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_VISUALIZACAO_DADOS);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaIntegranteLoader.getRoot());
    }

    @FXML
    private void onActionFromItemAtualizarIntegrante(ActionEvent event) {
        TemplatePesquisaIntegranteController controlador = this.templatePesquisaIntegranteLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_ATUALIZACAO_DADOS);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaIntegranteLoader.getRoot());
    }

    @FXML
    private void onActionFromItemRemoverIntegrante(ActionEvent event) {
        TemplatePesquisaIntegranteController controlador = this.templatePesquisaIntegranteLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_REMOCAO);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaIntegranteLoader.getRoot());
    }

    @FXML
    private void onActionFromItemCriarMusica(ActionEvent event) {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/musica/CriarMusica.fxml"));
        Parent root = null;
        try {
            root = (Parent) fxmlLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add(root);
    }

    @FXML
    private void onActionFromItemVisualizarDadosMusica(ActionEvent event) {
        TemplatePesquisaMusicaController controlador = this.templatePesquisaMusicaLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_VISUALIZACAO_DADOS);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaMusicaLoader.getRoot());
    }

    @FXML
    private void onActionFromItemAtualizarDadosMusica(ActionEvent event) {
        TemplatePesquisaMusicaController controlador = this.templatePesquisaMusicaLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_ATUALIZACAO_DADOS);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaMusicaLoader.getRoot());
    }

    @FXML
    private void onActionFromItemRemoverMusica(ActionEvent event) {
        TemplatePesquisaMusicaController controlador = this.templatePesquisaMusicaLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_REMOCAO);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaMusicaLoader.getRoot());
    }

    @FXML
    private void onActionFromItemGerarImpressao(ActionEvent event) {
        TemplatePesquisaMusicaController controlador = this.templatePesquisaMusicaLoader.getController();
        controlador.setTipoPagina(TipoPagina.PESQUISA_GERACAO_IMPRESSAO);

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaMusicaLoader.getRoot());
    }

    @FXML
    private void onActionFromItemGerenciarAutores(ActionEvent event) {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/musica/GerenciarAutores.fxml"));
        Parent root = null;
        try {
            root = (Parent) fxmlLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add(root);
    }

    @FXML
    private void onActionFromItemMontarMissa(ActionEvent event) {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/snu/fronteiras/visao/missa/MontarMissaSelecao.fxml"));
        Parent root = null;
        try {
            root = (Parent) fxmlLoader.load();
        } catch (IOException ex) {
            Logger.getLogger(FXMLDocumentController.class.getName()).log(Level.SEVERE, null, ex);
        }

        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add(root);
    }

    @FXML
    private void onActionFromPesquisarMissa(ActionEvent event) {
        //Limpa o conteúdo anterior e carrega a página
        this.contentAnchorPane.getChildren().clear();
        this.contentAnchorPane.getChildren().add((Parent) this.templatePesquisaMissaLoader.getRoot());
    }

    @FXML
    private void onActionFromItemAfinador(ActionEvent event) {
    }

    @FXML
    private void onActionFromItemSobre(ActionEvent event) {
    }
}
